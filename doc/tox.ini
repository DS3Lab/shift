# How to reuse environment?
# https://github.com/tox-dev/tox/issues/425

# Configures how flake8 behaves
[flake8]
max-line-length = 88
extend-ignore = E203,W503

# Configures which lines are not reported as missed in coverage report even if they
# are not reached
[coverage:report]
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    pass

# Do not include tests themselves in the coverage report
[coverage:run]
omit =
    */tests/*
    */setup.py
    */main.py
source =
    common/schemas
    common/pipeline
    common/db_tools
    rest
    scheduler
    worker_general
    worker_tf1

[tox]
# Defines the order in which everything is executed if just 'tox' is called without the
# -e flag
envlist =
    flake8
    black-check
    isort-check
    docs
    common-test
    common-mypy
    rest-mypy
    scheduler-test
    scheduler-mypy
    worker_general-test
    worker_general-mypy
    worker_tf1-mypy
    coverage

skipsdist = True

# [base-...] define common properties of multiple environments
# https://tox.readthedocs.io/en/latest/config.html#substitution-for-values-from-other-sections
[base-code-quality]
deps =
    flake8
    black
    isort

[base-unit-test]
deps =
    mypy
    pytest
    coverage
    -e common/schemas
    -e common/pipeline
    -e common/db_tools

[testenv:flake8]
basepython = python3.6
deps = {[base-code-quality]deps}
commands = flake8 . --count --statistics

[testenv:black-check]
envdir = {toxworkdir}/flake8
basepython = python3.6
deps = {[base-code-quality]deps}
commands = black --check .

[testenv:black]
envdir = {toxworkdir}/flake8
basepython = python3.6
deps = {[base-code-quality]deps}
commands = black .

[testenv:isort-check]
envdir = {toxworkdir}/flake8
basepython = python3.6
deps = {[base-code-quality]deps}
commands = isort --check --profile black .

[testenv:isort]
envdir = {toxworkdir}/flake8
basepython = python3.6
deps = {[base-code-quality]deps}
commands = isort --profile black .

[testenv:docs]
basepython = python3.6
deps =
    sphinx
    furo
    -e common/schemas
    -e common/pipeline
    -e common/db_tools
changedir = {toxinidir}/doc
# https://stackoverflow.com/a/21021830
commands = sphinx-build -aEW source build

[testenv:common-test]
basepython = python3.6
deps = {[base-unit-test]deps}
setenv = file|.env
commands =
    coverage run -m pytest common

[testenv:common-mypy]
envdir = {toxworkdir}/common-test
basepython = python3.6
deps = {[base-unit-test]deps}
commands =
    mypy common/schemas
    mypy common/pipeline
    mypy common/db_tools

[testenv:rest-mypy]
basepython = python3.6
deps =
   {[base-unit-test]deps}
    -r rest/requirements-external.txt
commands = mypy rest

[testenv:scheduler-test]
basepython = python3.6
deps =
    {[base-unit-test]deps}
    -r scheduler/requirements-external.txt
setenv = file|.env
commands = coverage run -a -m pytest scheduler

[testenv:scheduler-mypy]
envdir = {toxworkdir}/scheduler-test
basepython = python3.6
deps =
    {[base-unit-test]deps}
    -r scheduler/requirements-external.txt
commands = mypy scheduler

[testenv:worker_general-test]
basepython = python3.6
install_command = python -m pip install {opts} {packages} -f https://download.pytorch.org/whl/torch_stable.html
deps =
    {[base-unit-test]deps}
    -r worker_general/requirements-external-dev.txt
setenv =
    file|.env

    # Set custom folder for generated folders
    HF_HOME={toxinidir}/worker_general/general/reader/tests/data/hf_home

    # Disable multiprocessing for unit tests
    PT_NUM_WORKERS=0
    PT_PREFETCH_FACTOR=2
commands = coverage run -a -m pytest worker_general

[testenv:worker_general-mypy]
envdir = {toxworkdir}/worker_general-test
basepython = python3.6
install_command = python -m pip install {opts} {packages} -f https://download.pytorch.org/whl/torch_stable.html
deps =
    {[base-unit-test]deps}
    -r worker_general/requirements-external-dev.txt
commands = mypy worker_general

[testenv:worker_tf1-mypy]
install_command = python -m pip install {opts} {packages} -f https://download.pytorch.org/whl/torch_stable.html
basepython = python3.6
deps =
    {[base-unit-test]deps}
    -r worker_tf1/requirements-external-dev.txt
commands = mypy worker_tf1

[testenv:coverage]
envdir = {toxworkdir}/common-test
basepython = python3.6
deps = {[base-unit-test]deps}
commands =
    coverage report
    coverage html